---
- name: Deploy RM | Debug dockercompose_local_location
  debug:
    msg: "The path is {{ dockercompose_local_location }}"

- name: Deploy RM | Deploy Docker Compose from local source
  when: deployment_source == 'local'
  block:
    - name: Deploy RM | Synchronize Docker Compose project directory from control node
      ansible.builtin.synchronize:
        src: "{{ dockercompose_local_location }}/"
        dest: "/home/{{ ansible_user }}/docker-rasenmaeher-integration"
        recursive: true
        delete: true
        mode: 'push'
      delegate_to: localhost
      become: true

- name: Deploy RM | Build Docker Compose project when local and log output
  ansible.builtin.shell:
    cmd: |
      docker compose -f /home/{{ ansible_user }}/docker-rasenmaeher-integration/docker-compose.yml build > /home/{{ ansible_user }}/compose_output.log 2>&1
    chdir: "/home/{{ ansible_user }}/docker-rasenmaeher-integration"
  environment:
    KEYCLOAK_DATABASE_PASSWORD: "{{ keycloak_database_password }}"
    RM_DATABASE_PASSWORD: "{{ rm_database_password }}"
    POSTGRES_PASSWORD: "{{ postgres_password }}"
    LDAP_ADMIN_PASSWORD: "{{ ldap_admin_password }}"
    KEYCLOAK_ADMIN_PASSWORD: "{{ keycloak_admin_password }}"
    KEYCLOAK_MANAGEMENT_PASSWORD: "{{ keycloak_management_password }}"
    TAK_DATABASE_PASSWORD: "{{ tak_database_password }}"
    SERVER_DOMAIN: "{{ server_domain }}"
    CFSSL_CA_NAME: "{{ cfssl_ca_name }}"
    MW_LE_EMAIL: "{{ mw_le_email }}"
    MW_LE_TEST: "{{ mw_le_test }}"
    TAKSERVER_CERT_PASS: "{{ takserver_cert_pass }}"
    TAK_CA_PASS: "{{ tak_ca_pass }}"
  async: 900
  become: false
  poll: 0
  register: compose_background
  when: deployment_source == 'local'

- name: Periodically fetch logs while waiting for completion
  ansible.builtin.shell:
    cmd: tail -20 /home/{{ ansible_user }}/compose_output.log  # Fetches last 20 lines
  register: log_output
  until: compose_background.finished
  retries: 900
  delay: 10
  ignore_errors: true

- name: Output final portion of logs
  ansible.builtin.debug:
    var: log_output.stdout_lines

- name: Deploy RM | Start Docker Compose in detached mode and log output
  ansible.builtin.shell:
    cmd: |
      docker-compose -f /home/{{ ansible_user }}/docker-rasenmaeher-integration/docker-compose.yml up > /home/{{ ansible_user }}/compose_output.log 2>&1
    chdir: "/home/{{ ansible_user }}/docker-rasenmaeher-integration"
  environment:
    KEYCLOAK_DATABASE_PASSWORD: "{{ keycloak_database_password }}"
    RM_DATABASE_PASSWORD: "{{ rm_database_password }}"
    POSTGRES_PASSWORD: "{{ postgres_password }}"
    LDAP_ADMIN_PASSWORD: "{{ ldap_admin_password }}"
    KEYCLOAK_ADMIN_PASSWORD: "{{ keycloak_admin_password }}"
    KEYCLOAK_MANAGEMENT_PASSWORD: "{{ keycloak_management_password }}"
    TAK_DATABASE_PASSWORD: "{{ tak_database_password }}"
    SERVER_DOMAIN: "{{ server_domain }}"
    CFSSL_CA_NAME: "{{ cfssl_ca_name }}"
    MW_LE_EMAIL: "{{ mw_le_email }}"
    MW_LE_TEST: "{{ mw_le_test }}"
    TAKSERVER_CERT_PASS: "{{ takserver_cert_pass }}"
    TAK_CA_PASS: "{{ tak_ca_pass }}"
  become: no
  async: 900
  poll: 0
  register: compose_background

- name: Periodically fetch logs while waiting for completion
  ansible.builtin.shell:
    cmd: tail -20 /home/{{ ansible_user }}/compose_output.log  # Fetches last 20 lines
  register: log_output
  until: compose_background.finished
  retries: 900
  delay: 10
  ignore_errors: true

- name: Output final portion of logs
  ansible.builtin.debug:
    var: log_output.stdout_lines

- name: Deploy RM | Deploy Docker Compose from remote repository
  when: deployment_source == 'remote'
  block:
    - name: Ensure git is installed (Debian/Ubuntu)
      ansible.builtin.apt:
        name: git
        state: present
      when: ansible_os_family == "Debian"

    - name: Deploy RM | Clone Docker Compose project repository
      ansible.builtin.git:
        repo: "{{ docker_composition_repo }}"
        dest: "/home/{{ ansible_user }}/docker-rasenmaeher-integration"
        version: "{{ docker_repo_tag }}"
        depth: 1
        clone: yes
        update: no  # Do not update submodules yet

    - name: Deploy RM | Switch .gitmodules ssh repos to https
      ansible.builtin.replace:
        path: "/home/{{ ansible_user }}/docker-rasenmaeher-integration/.gitmodules"
        regexp: 'git@github.com:'
        replace: 'https://github.com:'

    - name: Deploy RM | Pull Docker Compose images
      ansible.builtin.shell:
        cmd: |
          docker-compose -f /home/{{ ansible_user }}/docker-rasenmaeher-integration/docker-compose.yml pull
        chdir: "/home/{{ ansible_user }}/docker-rasenmaeher-integration"
      become: false

    - name: Deploy RM | Start Docker Compose in detached mode and log output
      ansible.builtin.shell:
        cmd: |
          docker-compose -f /home/{{ ansible_user }}/docker-rasenmaeher-integration/docker-compose.yml up -d > /home/{{ ansible_user }}/compose_output.log 2>&1
        chdir: "/home/{{ ansible_user }}/docker-rasenmaeher-integration"
      environment:
        KEYCLOAK_DATABASE_PASSWORD: "{{ keycloak_database_password }}"
        RM_DATABASE_PASSWORD: "{{ rm_database_password }}"
        POSTGRES_PASSWORD: "{{ postgres_password }}"
        LDAP_ADMIN_PASSWORD: "{{ ldap_admin_password }}"
        KEYCLOAK_ADMIN_PASSWORD: "{{ keycloak_admin_password }}"
        KEYCLOAK_MANAGEMENT_PASSWORD: "{{ keycloak_management_password }}"
        TAK_DATABASE_PASSWORD: "{{ tak_database_password }}"
        SERVER_DOMAIN: "{{ server_domain }}"
        CFSSL_CA_NAME: "{{ cfssl_ca_name }}"
        MW_LE_EMAIL: "{{ mw_le_email }}"
        MW_LE_TEST: "{{ mw_le_test }}"
        TAKSERVER_CERT_PASS: "{{ takserver_cert_pass }}"
        TAK_CA_PASS: "{{ tak_ca_pass }}"
      become: no
      async: 900
      poll: 0
      register: compose_background

    - name: Deploy RM | Tail the Docker Compose log file for real-time output
      ansible.builtin.shell:
        cmd: tail -f /home/{{ ansible_user }}/compose_output.log
      async: 900
      poll: 15
      until: compose_background.finished
      ignore_errors: yes
