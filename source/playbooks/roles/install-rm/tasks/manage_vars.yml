---
- name: Load vars from role if not already set
  include_vars:
    file: "../vars/vars.yml"

- name: Generate random secrets if empty, avoiding specific characters
  set_fact:
    "{{ item.key }}": "{{ lookup('community.general.random_string', length=16, special=false) }}"
  loop: "{{ secrets | dict2items }}"
  when: item.value | trim == '' or item.value is none
  delegate_to: localhost

- name: Ensure the directory for host-specific secrets exists on the control node
  ansible.builtin.file:
    path: "../inventory/host_vars/{{ inventory_hostname }}/"
    state: directory
  delegate_to: localhost

- name: Write vars to file on the control node
  copy:
    content: |
      rm_database_password: "{{ rm_database_password }}"
      postgres_password: "{{ postgres_password }}"
      ldap_admin_password: "{{ ldap_admin_password }}"
      keycloak_admin_password: "{{ keycloak_admin_password }}"
      keycloak_management_password: "{{ keycloak_management_password }}"
      keycloak_database_password: "{{ keycloak_database_password }}"
      takserver_cert_pass: "{{ takserver_cert_pass }}"
      tak_database_password_password: "{{ tak_database_password }}"
      tak_ca_pass: "{{ tak_ca_pass }}"
      server_domain: "{{ server_domain | default('localmaeher.pvarki.fi') }}"
      cfssl_ca_name: "{{ cfssl_ca_name | default('localmaeher') }}"
      mw_le_email: "{{ mw_le_email | default('example@example.com') }}"
      mw_le_test: "{{ mw_le_test | default('true') }}"
      deployment_source: "{{ deployment_source | default('remote') }}"
    dest: "../inventory/host_vars/{{ inventory_hostname }}/rasenmaeher_secrets.yml"
  delegate_to: localhost

- name: Debug deployment_source
  debug:
    var: deployment_source

- name: Encrypt secrets file with Ansible Vault on the control node
  ansible.builtin.command:
    cmd: "ansible-vault encrypt '../inventory/host_vars/{{ inventory_hostname }}/rasenmaeher_secrets.yml' --vault-password-file ../vault_pass.txt"
  delegate_to: localhost
  register: vault_encryption_result
  become: no
  ignore_errors: true  # Optionally add this to not fail the playbook and examine the output

- name: Debug vault encryption result
  ansible.builtin.debug:
    var: vault_encryption_result
  when: vault_encryption_result is defined
