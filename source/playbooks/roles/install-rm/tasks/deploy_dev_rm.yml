---
- name: Deploy RM | Debug dockercompose_local_location
  debug:
    msg: "The path is {{ dockercompose_local_location }}"

- name: Ensure the Docker Rasenmaeher integration directory exists
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/docker-rasenmaeher-integration"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'

- name: Deploy RM | Deploy Docker Compose from local source
  when: deployment_source == 'local'
  block:
    - name: Deploy RM | Synchronize Docker Compose project directory from control node
      ansible.builtin.synchronize:
        src: "{{ dockercompose_local_location }}/"
        dest: /home/{{ ansible_user }}/docker-rasenmaeher-integration"
        recursive: true
        delete: true
        mode: 'push'
      delegate_to: "{{ inventory_hostname }}"
      become: true

    - name: Deploy RM | Build Docker Compose project when local and log output
      ansible.builtin.shell:
        cmd: |
          docker compose -p rmdev -f /home/{{ ansible_user }}/docker-rasenmaeher-integration/docker-compose-local.yml -f /home/{{ ansible_user }}/docker-rasenmaeher-integration/docker-compose-dev.yml build > /home/{{ ansible_user }}/compose_output.log 2>&1
        chdir: "/home/{{ ansible_user }}/docker-rasenmaeher-integration"
      environment:
        KEYCLOAK_DATABASE_PASSWORD: "{{ keycloak_database_password }}"
        RM_DATABASE_PASSWORD: "{{ rm_database_password }}"
        POSTGRES_PASSWORD: "{{ postgres_password }}"
        LDAP_ADMIN_PASSWORD: "{{ ldap_admin_password }}"
        KEYCLOAK_ADMIN_PASSWORD: "{{ keycloak_admin_password }}"
        KEYCLOAK_MANAGEMENT_PASSWORD: "{{ keycloak_management_password }}"
        TAK_DATABASE_PASSWORD: "{{ tak_database_password }}"
        SERVER_DOMAIN: "{{ server_domain }}"
        CFSSL_CA_NAME: "{{ cfssl_ca_name }}"
        MW_LE_EMAIL: "{{ mw_le_email }}"
        MW_LE_TEST: "{{ mw_le_test }}"
        TAKSERVER_CERT_PASS: "{{ takserver_cert_pass }}"
        TAK_CA_PASS: "{{ tak_ca_pass }}"
      timeout: 900
      register: build_job

    - name: Fetch log
      ansible.builtin.shell:
        cmd: cat /home/{{ ansible_user }}/compose_output.log
      register: log_output

    - name: Deploy RM | Output final portion of logs
      ansible.builtin.debug:
        msg: "{{ log_output.stdout_lines }}"

- name: Deploy RM | Deploy Docker Compose from remote repository
  when: deployment_source == 'remote'
  block:
    - name: Ensure git is installed (Debian/Ubuntu)
      ansible.builtin.apt:
        name: git
        state: present
      when: ansible_os_family == "Debian"

    - name: Deploy RM | Clone Docker Compose project repository
      ansible.builtin.git:
        repo: "{{ docker_composition_repo }}"
        dest: "/home/{{ ansible_user }}/docker-rasenmaeher-integration"
        version: "{{ docker_repo_tag }}"
        depth: 1
        clone: yes
        update: no  # Do not update submodules yet

    - name: Deploy RM | Switch .gitmodules ssh repos to https
      ansible.builtin.replace:
        path: "/home/{{ ansible_user }}/docker-rasenmaeher-integration/.gitmodules"
        regexp: 'git@github.com:'
        replace: 'https://github.com:'

    - name: Deploy RM | Pull Docker Compose images
      ansible.builtin.shell:
        cmd: |
          docker compose -f /home/{{ ansible_user }}/docker-rasenmaeher-integration/docker-compose.yml pull > /home/{{ ansible_user }}/compose_output.log 2>&1
        chdir: "/home/{{ ansible_user }}/docker-rasenmaeher-integration"
      environment:
        KEYCLOAK_DATABASE_PASSWORD: "{{ keycloak_database_password }}"
        RM_DATABASE_PASSWORD: "{{ rm_database_password }}"
        POSTGRES_PASSWORD: "{{ postgres_password }}"
        LDAP_ADMIN_PASSWORD: "{{ ldap_admin_password }}"
        KEYCLOAK_ADMIN_PASSWORD: "{{ keycloak_admin_password }}"
        KEYCLOAK_MANAGEMENT_PASSWORD: "{{ keycloak_management_password }}"
        TAK_DATABASE_PASSWORD: "{{ tak_database_password }}"
        SERVER_DOMAIN: "{{ server_domain }}"
        CFSSL_CA_NAME: "{{ cfssl_ca_name }}"
        MW_LE_EMAIL: "{{ mw_le_email }}"
        MW_LE_TEST: "{{ mw_le_test }}"
        TAKSERVER_CERT_PASS: "{{ takserver_cert_pass }}"
        TAK_CA_PASS: "{{ tak_ca_pass }}"
      become: false
      ignore_errors: true

    - name: Deploy RM | Start Docker Compose in detached mode and log output
      ansible.builtin.shell:
        cmd: |
          docker compose -p rmdev -f /home/{{ ansible_user }}/docker-rasenmaeher-integration/docker-compose-local.yml -f /home/{{ ansible_user }}/docker-rasenmaeher-integration/docker-compose-dev.yml up -d > /home/{{ ansible_user }}/compose_output.log 2>&1
        chdir: "/home/{{ ansible_user }}/docker-rasenmaeher-integration"
      environment:
        KEYCLOAK_DATABASE_PASSWORD: "{{ keycloak_database_password }}"
        RM_DATABASE_PASSWORD: "{{ rm_database_password }}"
        POSTGRES_PASSWORD: "{{ postgres_password }}"
        LDAP_ADMIN_PASSWORD: "{{ ldap_admin_password }}"
        KEYCLOAK_ADMIN_PASSWORD: "{{ keycloak_admin_password }}"
        KEYCLOAK_MANAGEMENT_PASSWORD: "{{ keycloak_management_password }}"
        TAK_DATABASE_PASSWORD: "{{ tak_database_password }}"
        SERVER_DOMAIN: "{{ server_domain }}"
        CFSSL_CA_NAME: "{{ cfssl_ca_name }}"
        MW_LE_EMAIL: "{{ mw_le_email }}"
        MW_LE_TEST: "{{ mw_le_test }}"
        TAKSERVER_CERT_PASS: "{{ takserver_cert_pass }}"
        TAK_CA_PASS: "{{ tak_ca_pass }}"
      become: no
      timeout: 1500
      register: compose_background

    - name: Deploy RM | Fetch log
      ansible.builtin.shell:
        cmd: cat /home/{{ ansible_user }}/compose_output.log
      register: log_output

    - name: Deploy RM | Output final portion of logs
      ansible.builtin.debug:
        msg: "{{ log_output.stdout_lines }}"
