####################################
# RM Miniwerk Ansible Env Template #
####################################

# Vault
ANSIBLE_VAULT_PASSWORD=myvaultpassword # pragma: allowlist secret

# Credentials
TARGET_ANSIBLEUSER=ansibleuser # pragma: allowlist secret
TARGET_ANSIBLEPASS=youransiblepassword # pragma: allowlist secret
TARGET_ANSIBLE_SSH_PRIVATE_KEY_FILE=$HOME/.ssh/id_rsa
TARGET_ANSIBLE_SSH_PUBLIC_KEY_FILE=$HOME/.ssh/id_rsa.pub

# Target settings
ENVIRONMENT_STAGE=staging # If this is 'production', the playbook will use the production settings
TARGET_HOSTNAME=staging-server
TARGET_ANSIBLE_HOST=192.168.1.100
SERVER_NETWORK_INTERFACE= # This should be the whatever interface is outgoing in your server. Dnsmasq binds to this.

# Localhost vars
LOCALHOST_BECOME_PASSWORD=
LOCALHOST_USER=

# Admin Credentials (For manual SSH connections)
TARGET_ADMINUSER=admin
TARGET_ADMINPASS=adminpassword

## RM CI VARS
# Which version to deploy?
DOCKER_REPO_TAG=
# Where the integration repo lies now in the Internet?
DOCKER_COMPOSITION_REPO=
# Do you want to deploy Rasenmaeher from your local control node or the Github repo?
# Options: 'local' or 'remote'
DEPLOYMENT_SOURCE="remote"
# Where the integration repo lies now in control node, if you want to deliver it
# from your local machine?
DOCKERCOMPOSE_LOCAL_LOCATION=
# Do you want to deploy RM in DEV mode? True to do so. Else, production scripts are used.
DEPLOY_IN_DEV=
# Do you want to build RM locally? Default is false.
BUILD_LOCALLY=

### RM VARS
# Works like so, that either define these here, or the playbook will generate them.
KEYCLOAK_DATABASE_PASSWORD=
RM_DATABASE_PASSWORD=
POSTGRES_PASSWORD=
LDAP_ADMIN_PASSWORD=
KEYCLOAK_ADMIN_PASSWORD=
KEYCLOAK_MANAGEMENT_PASSWORD=
KEYCLOAK_DATABASE_PASSWORD=
TAK_DATABASE_PASSWORD=
VITE_ASSET_SET=
SERVER_DOMAIN="localmaeher.pvarki.fi"
CFSSL_CA_NAME="localmaeher"
MW_LE_EMAIL="example@example.com"
MW_LE_TEST="true"  # switch to false when you are ready for production
TAKSERVER_CERT_PASS=
TAK_CA_PASS=
ADDITIONA_SUBDOMAIN=   # If you need to set additional subdomain to local service dnsmasq
# Need to define if you want to run it with self-signed certs, that is, in DEV mode
NGINX_HTTPS_PORT=443

## DY DDNS SECRETS
## If you deploy using dy.fi dynamic DNS, you need these.
DYUSER=
DYPASSWORD=
DDNS_DOMAINNAME=

# DNS Configuration
DO_YOU_WANT_TO_USE_DNS=false
DNS_ZONE_NAME="pvarki.fi"
DNS_RECORD_NAME="{{ TARGET_HOSTNAME }}.{{ DNS_ZONE_NAME }}"
DNS_PROVIDER_URL="https://api.mydnsprovider.com/v1"
DNS_API_TOKEN=yourdnsapitoken # pragma: allowlist secret
WINDOWS_SERVER_DNS="false" # Is your DNS Server a WinServer?

## OpenVPN
## Do you want to deploy OVPN to the target?
## If so, config the role vars from below.
OPENVPN_WANTED=false
# Expects list [string]
# Eg [10.9.0.1,127.0.0.53]
OPENVPN_CUSTOM_DNS=
# List of OpenVPN clients
# Expects list [string]
OPENVPN_CLIENTS=[yalla1,yalla2,yalla3,yalla4,yalla5]
